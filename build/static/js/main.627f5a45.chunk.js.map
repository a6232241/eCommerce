{"version":3,"sources":["utils/url.js","hook/CommodityItem.js","components/CommodityList.js","utils/axiosApi.js","pages/Index.js","pages/Apparel.js","pages/Styles.js","utils/storageApi.js","hook/AddToShopping.js","hook/ShopCheckout.js","components/CommodityContainer.js","routes.js","pages/CommodityPage.js","hook/Menu.js","hook/ShoppingCart.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["backEndUrl","CommodifyItem","props","useState","item","setItem","useEffect","to","pathname","style","aid","textDecoration","color","Card","className","id","Img","variant","src","imgPath","Body","Title","title","Text","price","CommodityList","this","list","length","map","index","Col","md","xs","key","CommodityItem","Container","fluid","Row","undefined","renderList","Component","userRequest","axios","create","withCredentials","baseURL","headers","resSuccess","res","console","log","data","message","resError","err","get","then","catch","resData","post","Index","commodityList","setCommodityList","handleCommodityList","a","axiosApi","Apparel","renderRoutes","route","children","Styles","paramsUrl","match","params","formData","FormData","append","name","val","Storage","localStorage","document","cookie","getItem","cName","ca","split","i","c","charAt","substring","indexOf","getCookie","withRouter","handleAddShoppingData","shopping","colorVal","sizeVal","alert","storageApi","JSON","stringify","history","push","window","location","Button","size","onClick","ShopCheckout","handleShopCheckout","href","CommodityContainer","state","amount","renderButton","bind","changeColorVal","changeSizeVal","changeAmount","container","ToggleButton","value","setState","e","parseInt","target","replace","borderRight","Image","margin","ToggleButtonGroup","type","onChange","InputGroup","min","max","routes","path","component","exact","Name","setContainer","handleContainer","Menu","Navbar","expand","Nav","fontSize","fontWeight","Link","NavDropdown","Divider","ShoppingCart","show","setShow","payment","setPayment","totalPrice","handleClose","Modal","centered","onHide","Header","closeButton","shoppingAll","totalAmount","Footer","changeDom","shoppingData","handleGenerateUUID","handleGetShoppingData","uuid","App","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.627f5a45.chunk.js","sourcesContent":["// const backEndUrl = 'http://localhost:8081'\r\nconst backEndUrl = 'https://e-commerce-plat-backend.herokuapp.com'\r\n\r\nexport default backEndUrl\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport '../assets/scss/hook/commodityItem.scss'\r\nimport backEndUrl from '../utils/url'\r\n\r\nconst CommodifyItem = (props) => {\r\n  const [item, setItem] = useState('')\r\n\r\n  useEffect(() => {\r\n    setItem(props.item)\r\n  }, [props.item])\r\n\r\n  return (\r\n    <Link\r\n      to={{ pathname: `/apparel/${item.style}/${item.aid}` }}\r\n      style={{ textDecoration: 'none', color: '#000' }}\r\n    >\r\n      <Card className='text-center my-3' id='commodity-container'>\r\n        <Card.Img variant='top' src={`${backEndUrl}${item.imgPath}`} />\r\n        <Card.Body>\r\n          <Card.Title id='commodity-title'>{item.title}</Card.Title>\r\n          <Card.Text id='commodity-price'>${item.price}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </Link>\r\n  )\r\n}\r\n\r\nexport default CommodifyItem\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport CommodityItem from '../hook/CommodityItem'\r\n\r\nclass CommodityList extends Component {\r\n\r\n  renderList() {\r\n    if (this.props && this.props.list && this.props.list.length > 0) {\r\n      let items = this.props.list.map((item, index) => {\r\n        return (\r\n          <Col md='3' xs='12' key={index}>\r\n            <CommodityItem item={item} />\r\n          </Col>\r\n        )\r\n      })\r\n      return items\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Container fluid='md'>\r\n          <Row>\r\n            <Col>\r\n              <h3 className='text-right'>\r\n                {this.props.style === undefined ? '推薦' : this.props.style}\r\n              </h3>\r\n            </Col>\r\n          </Row>\r\n          <Row>{this.renderList()}</Row>\r\n        </Container>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommodityList\r\n","import axios from 'axios'\r\nimport backEndUrl from '../utils/url'\r\n\r\nconst userRequest = axios.create({\r\n  withCredentials: true,\r\n  baseURL: backEndUrl,\r\n  headers: { 'content-type': 'multipart/form-data' },\r\n})\r\n\r\nconst resSuccess = (res) => {\r\n  console.log(`${res.data.message}`)\r\n  return res.data.data\r\n}\r\n\r\nconst resError = (err) => {\r\n  console.log(err.data)\r\n}\r\n\r\nexport default {\r\n  // 取得商品列表\r\n  async getCommodityList() {\r\n    let resData = await userRequest\r\n      .get('/getCommodityList')\r\n      .then(resSuccess)\r\n      .catch(resError)\r\n    return resData\r\n  },\r\n  // 取得商品細節\r\n  async getCommodityItem(data) {\r\n    let resData = await userRequest\r\n      .post('/getCommodityItem', data)\r\n      .then(resSuccess)\r\n      .catch(resError)\r\n    return resData\r\n  },\r\n  // 生成使用者的 UUID\r\n  async generateUUID() {\r\n    let resData = await userRequest\r\n      .get('/generateUUID')\r\n      .then(resSuccess)\r\n      .catch(resError)\r\n    return resData\r\n  },\r\n  // 取得 UUID 中的購物車資料\r\n  async getShoppingData(data) {\r\n    let resData = await userRequest\r\n      .post('/getShoppingData', data)\r\n      .then(resSuccess)\r\n      .catch(resError)\r\n    return resData\r\n  },\r\n  // 將新增的指定商品加入對應的 UUID\r\n  async addShoppingData(data) {\r\n    let resData = await userRequest\r\n      .post('/addShoppingData', data)\r\n      .then(resSuccess)\r\n      .catch(resError)\r\n    return resData\r\n  },\r\n  // 進行結帳\r\n  async getPaymentAction(data) {\r\n    let resData = await userRequest\r\n      .post('/paymentaction', data)\r\n      .then(resSuccess)\r\n      .catch(resError)\r\n    return resData\r\n  },\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport CommodityList from '../components/CommodityList'\r\n// import Footer from '../components/Footer'\r\nimport axiosApi from '../utils/axiosApi'\r\n\r\nconst Index = () => {\r\n  let [commodityList, setCommodityList] = useState('')\r\n\r\n  const handleCommodityList = async () => {\r\n    let resData = await axiosApi.getCommodityList()\r\n    return resData\r\n  }\r\n\r\n  useEffect(() => {\r\n    let resData = handleCommodityList()\r\n    resData.then(data => {\r\n      setCommodityList(data)\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <CommodityList list={commodityList} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Index\r\n","import React from 'react'\r\nimport { renderRoutes } from 'react-router-config'\r\n\r\nconst Apparel = (props) => {\r\n  return (\r\n    <div>\r\n      {renderRoutes(props.route.children)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Apparel\r\n","import React, { useState, useEffect } from 'react'\r\nimport CommodityList from '../components/CommodityList'\r\nimport axiosApi from '../utils/axiosApi'\r\n\r\nconst Styles = (props) => {\r\n  const paramsUrl = props.match.params\r\n\r\n  let [commodityList, setCommodityList] = useState('')\r\n\r\n  useEffect(() => {\r\n    const handleCommodityList = async () => {\r\n      let formData = new FormData()\r\n      formData.append('style', paramsUrl.style)\r\n\r\n      let resData = await axiosApi.getCommodityItem(formData)\r\n      return resData\r\n    }\r\n\r\n    let resData = handleCommodityList()\r\n    resData.then((data) => {\r\n      setCommodityList(data)\r\n    })\r\n  }, [paramsUrl])\r\n\r\n  return (\r\n    <div>\r\n      <CommodityList style={paramsUrl.style} list={commodityList} />\r\n      {/* {renderRoutes(props.route.children)} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Styles\r\n","const getCookie = (cName) => {\r\n  let name = cName + '='\r\n  let ca = document.cookie.split(';')\r\n  for (let i = 0; i < ca.length; i++) {\r\n    let c = ca[i]\r\n    // 如果字串首字元為空格則移除\r\n    while (c.charAt(0) === ' ') {\r\n      c = c.substring(1)\r\n    }\r\n    // 如果找到對應的 name 則返回結果\r\n    if (c.indexOf(name) === 0) {\r\n      return c.substring(name.length, c.length)\r\n    }\r\n  }\r\n  return ''\r\n}\r\n\r\nexport default {\r\n  setStorage(name, val) {\r\n    if (typeof Storage !== 'undefined') {\r\n      localStorage.setItem(name, val)\r\n    } else {\r\n      document.cookie = name + '=' + val\r\n    }\r\n  },\r\n  getStorage(name) {\r\n    if (typeof Storage !== 'undefined') {\r\n      let storage = localStorage.getItem(name)\r\n      return storage\r\n    } else {\r\n      let cookie = getCookie(name)\r\n      return cookie\r\n    }\r\n  },\r\n  removeStorage(name) {\r\n    if (typeof Storage !== 'undefined') {\r\n      localStorage.removeItem(name)\r\n    } else {\r\n      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`\r\n    }\r\n  },\r\n}\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport {withRouter} from 'react-router-dom';\r\nimport axiosApi from '../utils/axiosApi'\r\nimport storageApi from '../utils/storageApi'\r\n\r\nconst AddToShopping = (props) => {\r\n  const handleAddShoppingData = async () => {\r\n    if(props.shopping.colorVal.length === 0 || props.shopping.sizeVal.length === 0){\r\n      alert('請選擇尺寸或顏色')\r\n    }else {\r\n      let formData = new FormData()\r\n      formData.append('uuid', storageApi.getStorage('uuid'))\r\n      formData.append('shopping', JSON.stringify(props.shopping))\r\n      await axiosApi.addShoppingData(formData)\r\n      alert('加入購物車')\r\n      \r\n      props.history.push(window.location.pathname)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant='outline-warning'\r\n      className='ml-2'\r\n      size='lg'\r\n      onClick={handleAddShoppingData}\r\n    >\r\n      放入購物車\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default withRouter(AddToShopping)\r\n","import React from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n// import {withRouter} from 'react-router-dom';\r\n// import axiosApi from '../utils/axiosApi'\r\nimport storageApi from '../utils/storageApi'\r\nimport backEndUrl from '../utils/url'\r\n\r\nconst ShopCheckout = (props) => {\r\n  const handleShopCheckout = async () => {\r\n    if(props.onClick) props.onClick()\r\n    window.location.href = `${backEndUrl}/paymentaction?uuid=${storageApi.getStorage('uuid')}`\r\n    // let formData = new FormData()\r\n    // formData.append('uuid', storageApi.getStorage('uuid'))\r\n    // let resData = await axiosApi.getPaymentAction(formData)\r\n    // let parser = new DOMParser()\r\n    // let doc = parser.parseFromString(resData, 'application/xml')\r\n    // let docNodes = doc.childNodes[0].childNodes\r\n    // console.log(resData)\r\n    // props.changeDom(docNodes)\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      variant='outline-danger'\r\n      className='ml-2'\r\n      size={props.size}\r\n      onClick={handleShopCheckout}\r\n    >\r\n      前往結帳\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default ShopCheckout\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  InputGroup,\r\n} from 'react-bootstrap'\r\nimport AddToShopping from '../hook/AddToShopping'\r\nimport ShopCheckout from '../hook/ShopCheckout'\r\nimport backEndUrl from '../utils/url'\r\n\r\nexport default class CommodityContainer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      aid: this.props.aid,\r\n      colorVal: '',\r\n      sizeVal: '',\r\n      amount: 1,\r\n    }\r\n\r\n    this.renderButton = this.renderButton.bind(this)\r\n    this.changeColorVal = this.changeColorVal.bind(this)\r\n    this.changeSizeVal = this.changeSizeVal.bind(this)\r\n    this.changeAmount = this.changeAmount.bind(this)\r\n  }\r\n\r\n  // @params String 需要取值得變數名\r\n  renderButton(name) {\r\n    let data = this.props.container[name]\r\n    if (data !== undefined) {\r\n      let array = data.split(',')\r\n      let items = array.map((item, index) => {\r\n        return (\r\n          <ToggleButton\r\n            key={index}\r\n            value={item}\r\n            className='ml-2 mb-3'\r\n            variant='outline-primary'\r\n          >\r\n            {item}\r\n          </ToggleButton>\r\n        )\r\n      })\r\n      return items\r\n    } else {\r\n      return\r\n    }\r\n  }\r\n\r\n  changeColorVal(data) {\r\n    this.setState({ colorVal: data })\r\n  }\r\n\r\n  changeSizeVal(data) {\r\n    this.setState({ sizeVal: data })\r\n  }\r\n\r\n  changeAmount(e) {\r\n    this.setState({ amount: parseInt(e.target.value.replace(/\\D/, '')) })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Container>\r\n          <Row>\r\n            <Col\r\n              className='d-flex'\r\n              md='4'\r\n              style={{ borderRight: '#ccc 1px solid' }}\r\n            >\r\n              <Image\r\n                style={{ margin: 'auto' }}\r\n                src={`${backEndUrl}${this.props.container.imgPath}`}\r\n              ></Image>\r\n            </Col>\r\n            <Col className='text-right'>\r\n              <h2>{this.props.container.title}</h2>\r\n              <h3>NT$ {this.props.container.price}</h3>\r\n              <h6>顏色</h6>\r\n              <ToggleButtonGroup\r\n                type='radio'\r\n                name='options'\r\n                value={this.state.colorVal}\r\n                onChange={this.changeColorVal}\r\n              >\r\n                {this.renderButton('color')}\r\n              </ToggleButtonGroup>\r\n              <h6>尺寸</h6>\r\n              <ToggleButtonGroup\r\n                type='radio'\r\n                name='options'\r\n                value={this.state.sizeVal}\r\n                onChange={this.changeSizeVal}\r\n              >\r\n                {this.renderButton('size')}\r\n              </ToggleButtonGroup>\r\n              <h6>數量</h6>\r\n              <InputGroup className='justify-content-md-end mb-3'>\r\n                <input\r\n                  type='number'\r\n                  min={1}\r\n                  max={99}\r\n                  value={this.state.amount}\r\n                  onChange={this.changeAmount}\r\n                ></input>\r\n              </InputGroup>\r\n              <ShopCheckout size={'lg'} />\r\n              <AddToShopping shopping={this.state} aid={this.props.aid} />\r\n            </Col>\r\n          </Row>\r\n          <hr />\r\n        </Container>\r\n        <Container>\r\n          <h2>詳細資訊</h2>\r\n          <Row>\r\n            <Image\r\n              style={{ margin: 'auto' }}\r\n              src={`${backEndUrl}${this.props.container.imgPath}`}\r\n            ></Image>\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n","import Index from './pages/Index'\r\nimport Apparel from './pages/Apparel'\r\nimport Styles from './pages/Styles'\r\nimport CommodityPage from './pages/CommodityPage'\r\n\r\nconst routes = [\r\n  {\r\n    path: '/',\r\n    component: Index,\r\n    exact: true,\r\n    Name: 'Index',\r\n    title: '主頁',\r\n  },\r\n  {\r\n    path: '/apparel',\r\n    component: Apparel,\r\n    Name: 'Apparel',\r\n    title: '服飾',\r\n    children: [\r\n      {\r\n        path: '/apparel/:style',\r\n        component: Styles,\r\n        exact: true,\r\n        Name: 'Styles',\r\n        title: '類型',\r\n      },\r\n      {\r\n        path: '/apparel/:style/:aid',\r\n        component: CommodityPage,\r\n        Name: 'CommodityPage',\r\n        title: 'XXX',\r\n      },\r\n    ],\r\n  },\r\n]\r\n\r\nexport default routes\r\n","import React, { useState, useEffect } from 'react'\r\nimport { renderRoutes } from 'react-router-config'\r\nimport CommodityContainer from '../components/CommodityContainer'\r\nimport axiosApi from '../utils/axiosApi'\r\n\r\nconst CommodityPage = (props) => {\r\n  const paramsUrl = props.match.params\r\n\r\n  let [container, setContainer] = useState('')\r\n\r\n  useEffect(() => {\r\n    const handleContainer = async () => {\r\n      let formData = new FormData()\r\n      formData.append('style', paramsUrl.style)\r\n      formData.append('aid', paramsUrl.aid)\r\n\r\n      let resData = await axiosApi.getCommodityItem(formData)\r\n      return resData\r\n    }\r\n\r\n    let resData = handleContainer()\r\n    resData.then((data) => {\r\n      setContainer(data[0])\r\n    })\r\n  }, [paramsUrl])\r\n\r\n  return (\r\n    <div>\r\n      <CommodityContainer aid={paramsUrl.aid} container={container} />\r\n      {renderRoutes(props.route.children)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommodityPage\r\n","import React from 'react'\r\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = (props) => {\r\n  // constructor(props) {\r\n  //     super(props)\r\n  // }\r\n  return (\r\n    <Navbar expand='md'>\r\n      <Nav\r\n        className='mx-auto '\r\n        style={{ fontSize: '1.5rem', fontWeight: '900' }}\r\n      >\r\n        <Nav.Link href='/'>主頁</Nav.Link>\r\n        <NavDropdown title='類型' id='basic-nav-dropdown'>\r\n          <Link to={{ pathname: `/apparel/coat` }} className='dropdown-item'>\r\n            上衣\r\n          </Link>\r\n          <Link to={{ pathname: `/apparel/pants` }} className='dropdown-item'>\r\n            褲子\r\n          </Link>\r\n          <NavDropdown.Divider />\r\n          <Link\r\n            to={{ pathname: `/apparel/accessories` }}\r\n            className='dropdown-item'\r\n          >\r\n            配件\r\n          </Link>\r\n        </NavDropdown>\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default Menu\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, Row, Col } from 'react-bootstrap'\r\nimport '../assets/scss/hook/shoppingCart.scss'\r\nimport { BsBagFill } from 'react-icons/bs'\r\nimport ShopCheckout from './ShopCheckout'\r\n\r\nconst ShoppingCart = (props) => {\r\n  let [show, setShow] = useState(false)\r\n  let [payment, setPayment] = useState('')\r\n  let totalPrice = 0\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n\r\n  const renderList = () => {\r\n    if (props && props.shoppingAll && props.shoppingAll.length > 0) {\r\n      let items = props.shoppingAll.map((item, index) => {\r\n        totalPrice += item.totalAmount\r\n        return (\r\n          <Row key={index}>\r\n            <Col>{index}</Col>\r\n            <Col md={5}>{item.title}</Col>\r\n            <Col>{item.color}</Col>\r\n            <Col>{item.size}</Col>\r\n            <Col>{item.amount}</Col>\r\n            <Col>{item.totalAmount}</Col>\r\n          </Row>\r\n        )\r\n      })\r\n      return items\r\n    }\r\n  }\r\n\r\n  return payment === '' ? (\r\n    <section>\r\n      <BsBagFill\r\n        id='shoppingCart'\r\n        onClick={handleShow}\r\n        style={{ fontSize: '1.75rem' }}\r\n      />\r\n\r\n      <Modal\r\n        className='sm-12'\r\n        centered\r\n        size='lg'\r\n        show={show}\r\n        onHide={handleClose}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>購物車</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className='text-right'>\r\n          <Row>\r\n            <Col>編號</Col>\r\n            <Col md={5}>名稱</Col>\r\n            <Col>顏色</Col>\r\n            <Col>尺寸</Col>\r\n            <Col>數量</Col>\r\n            <Col>總價</Col>\r\n          </Row>\r\n          {renderList()}\r\n          <hr />\r\n          <Row>\r\n            <Col>總金額</Col>\r\n            <Col md={2}>{totalPrice}</Col>\r\n          </Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <ShopCheckout changeDom={setPayment} onClick={handleClose} />\r\n          <Button\r\n            variant='outline-warning'\r\n            className='ml-2'\r\n            onClick={handleClose}\r\n          >\r\n            繼續購物\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </section>\r\n  ) : (\r\n    <div>\r\n      {/* {React.createElement(payment, {}, null)} */}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ShoppingCart\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Menu from '../hook/Menu'\r\nimport ShoppingCart from '../hook/ShoppingCart'\r\nimport storageApi from '../utils/storageApi'\r\nimport axiosApi from '../utils/axiosApi'\r\n\r\nexport default class Header extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      shoppingData: [],\r\n    }\r\n    this.handleGenerateUUID = this.handleGenerateUUID.bind(this)\r\n    this.handleGetShoppingData = this.handleGetShoppingData.bind(this)\r\n  }\r\n\r\n  async handleGenerateUUID() {\r\n    let resData = await axiosApi.generateUUID()\r\n    return resData\r\n  }\r\n\r\n  async handleGetShoppingData(formData) {\r\n    let resData = await axiosApi.getShoppingData(formData)\r\n    return resData\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (storageApi.getStorage('uuid') === null) {\r\n      // 去後台生成 UUID\r\n      let resData = this.handleGenerateUUID()\r\n      resData.then((data) => {\r\n        storageApi.setStorage('uuid', data)\r\n      })\r\n    } else {\r\n      // 去後台取對應的 UUID 資料\r\n      let uuid = storageApi.getStorage('uuid')\r\n      let formData = new FormData()\r\n      formData.append('uuid', uuid)\r\n\r\n      let resData = this.handleGetShoppingData(formData)\r\n      resData.then((data) => {\r\n        this.setState({ shoppingData: data })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header className='pt-3'>\r\n        <Container fluid='md'>\r\n          <Row>\r\n            <Col md='7' xs='12' className='text-md-left text-center'>\r\n              <h1>CHENG 的服飾商店</h1>\r\n            </Col>\r\n            <Col className='text-md-right text-center'>\r\n              <ShoppingCart shoppingAll={this.state.shoppingData} />\r\n            </Col>\r\n          </Row>\r\n          <Menu />\r\n          <hr />\r\n        </Container>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { BsPerson, BsEnvelope } from 'react-icons/bs'\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer className='bg-dark text-light p-5'>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <h5 className='border-bottom border-white'>關於我們</h5>\r\n              <p>衣服、褲襪、飾品</p>\r\n            </Col>\r\n            <Col>\r\n              <h5 className='border-bottom border-white'>聯絡我們</h5>\r\n              <p>\r\n                <BsPerson />\r\n                <span className=\"align-middle\"> cheng</span>\r\n              </p>\r\n              <p>\r\n                <BsEnvelope />\r\n                <span className=\"align-middle\"> blf2556@gmail.com</span>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\n// import { Route } from 'react-router-dom'\r\nimport routes from './routes'\r\nimport { renderRoutes } from 'react-router-config'\r\nimport Header from './components/Header'\r\nimport Footer from './components/Footer'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Header />\r\n        <main className='pb-4'>{renderRoutes(routes)}</main>\r\n        <Footer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './assets/scss/index.scss'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\nimport { BrowserRouter, Switch } from 'react-router-dom'\r\n// import { Provider } from 'react-redux'\r\n// import { createStore } from 'redux'\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  <BrowserRouter>\r\n    <Switch>\r\n      <App />\r\n    </Switch>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}